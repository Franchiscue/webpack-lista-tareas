{"version":3,"sources":["webpack://ejemplo01/webpack/bootstrap","webpack://ejemplo01/webpack/runtime/define property getters","webpack://ejemplo01/webpack/runtime/hasOwnProperty shorthand","webpack://ejemplo01/./src/classes/tarea.class.js","webpack://ejemplo01/./src/classes/index.classes.js","webpack://ejemplo01/./src/js/components.js","webpack://ejemplo01/./src/classes/listaTareas.class.js","webpack://ejemplo01/./src/index.js"],"names":[],"mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;;;;;;;;ACAO;AACP;AACA;AACA;AACA;AACA;AACA,C;;ACNA;AACsC;AACY;;;;ACFF;AACf;;AAEjC;AACA;AACO;AACA;;AAEP;AACA;;AAEA;AACO;AACP;AACA,iBAAiB,qCAAqC,aAAa,UAAU;AAC7E;AACA,oDAAoD,qCAAqC;AACzF,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,IAAI,wBAAwB;AAC5B;;AAEA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8D;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA,6CAA6C,2DAA2D;;AAExG;AACA;AACA,6BAA6B,KAAK;AAClC,QAAQ,cAAc;AACtB;AACA,qBAAqB,iBAAiB;AACtC;AACA,KAAK;AACL;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA,CAAC;;AAED;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,QAAQ,mBAAmB;AAC3B;AACA,qBAAqB,iBAAiB;AACtC,QAAQ,wBAAwB;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,QAAQ,yBAAyB;AACjC,QAAQ,wBAAwB;AAChC;AACA,CAAC,C;;AC5H2C;AACX;AACe;;AAEzC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA,YAAY,yBAAyB;AACrC;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA,oBAAoB,YAAY,CAAC,iBAAiB;AAClD;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;ACnDA;AACwB;;AAExB;AACyD;;AAEzD;AAC+F;;AAE/F;AACO,kBAAkB,WAAW;AACpC,mCAAmC,YAAY;AAC/C,YAAY;AACZ,iCAAiC,mBAAmB,kBAAkB,sBAAsB;AAC5F,wBAAwB,G","file":"667577a8279052d36db3.bundle.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export class Tarea{\r\n    constructor(_tarea){\r\n        this.tarea = _tarea;\r\n        this.id = new Date().getTime();\r\n        this.completada = false;\r\n    }\r\n}","//Esto es más útil cuando tienes muchas clases\r\nimport { Tarea } from \"./tarea.class\";\r\nimport { ListaTareas } from \"./listaTareas.class\";\r\n\r\nexport {\r\n    Tarea,\r\n    ListaTareas\r\n}","import { Tarea } from \"../classes/index.classes\"\r\nimport { lista } from \"../index\";\r\n\r\n//Variables HTML\r\nconst tareaInput = document.getElementById(\"_newTodo\");\r\nexport const todoList = document.getElementById(\"_todoList\");\r\nexport const footer = document.getElementById(\"_footer\");\r\n\r\n//Inicialización variables\r\nlet enterPres = false;\r\n\r\n//Funciones\r\nexport const addTareaHTML = (_tarea)=>{\r\n    const tareasHTML =  `\r\n    <li class=\"${_tarea.completada ? \"completed\" : \"\"}\" data-id=\"${_tarea.id}\">\r\n        <div class=\"view\">\r\n            <input class=\"toggle\" type=\"checkbox\" ${(_tarea.completada) ? \"checked\" : \"\"}>\r\n            <label>${_tarea.tarea}</label>\r\n            <button class=\"destroy\"></button>\r\n        </div>\r\n        <input class=\"edit\" value=\"Create a TodoMVC template\">\r\n    </li>`;\r\n    todoList.innerHTML += tareasHTML;\r\n    lista.listaTareas.length === 0 ? footer.setAttribute(\"hidden\", true): footer.removeAttribute(\"hidden\");\r\n}\r\n\r\nconst ocultarTarea = (_activa)=>{\r\n    let lis = todoList.querySelectorAll(\"li\");\r\n        lis.forEach(elem =>{\r\n            lista.listaTareas.forEach(el =>{\r\n               if (elem.getAttribute(\"data-id\") == el.id){\r\n                   if(el.completada == _activa){\r\n                       elem.setAttribute(\"hidden\", true);\r\n                   } else {\r\n                       elem.removeAttribute(\"hidden\");\r\n                   }\r\n               }\r\n            });\r\n        });\r\n}\r\n\r\nexport const numeroTareas = (_array) => {\r\n    let pendientes = _array.length;\r\n    _array.forEach(element => {\r\n        if (element.completada){\r\n            pendientes -= 1;\r\n        }\r\n    });\r\n    footer.children[0].childNodes[0].textContent = pendientes;    \r\n}\r\n\r\nexport const ocultarBorrarCompletadas = ()=>{\r\n    let isOneCompleted = Array.from(todoList.children).some( e => e.classList.contains(\"completed\"));\r\n    isOneCompleted ? footer.children[2].removeAttribute(\"hidden\") : footer.children[2].setAttribute(\"hidden\", true);\r\n}\r\n\r\n//Eventos\r\ndocument.addEventListener(\"keypress\", (e)=> { e.key === \"Enter\" ? enterPres = true : enterPres = false;})\r\n\r\ntareaInput.addEventListener(\"keyup\", (e)=>{\r\n    if (e.key ===\"Enter\" && tareaInput.value.trim() != \"\"){\r\n        let nuevaTarea = new Tarea(tareaInput.value);\r\n        lista.addTarea(nuevaTarea);\r\n        addTareaHTML(nuevaTarea);\r\n        numeroTareas(lista.listaTareas);\r\n        tareaInput.value = \"\";\r\n    } else if (e.key === \"Enter\" && tareaInput.value.trim() === \"\"){\r\n        tareaInput.value = \"\";\r\n    }\r\n});\r\n\r\ntodoList.addEventListener(\"dblclick\", (e)=>{\r\n    if (e.target.innerHTML != \"\"){\r\n        let label = e.target;\r\n        label.setAttribute(\"contenteditable\", true);\r\n        label.setAttribute(\"style\", \"border: 1px solid black\");\r\n        label.addEventListener(\"keypress\", (el)=>{\r\n            if (el.key == \"Enter\"){\r\n                label.setAttribute(\"contenteditable\", false);\r\n                label.setAttribute(\"style\", \"\")\r\n                lista.listaTareas.forEach(elem =>{\r\n                    if (elem.id == label.parentNode.parentNode.getAttribute(\"data-id\")){\r\n                        elem.tarea = label.textContent;\r\n                        lista.guardarLocalStorage();\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n        \r\n});\r\n\r\ntodoList.addEventListener(\"click\", (e)=>{\r\n    if (e.target.localName === \"input\"){\r\n        lista.marcarCompletado(e.target.parentNode.parentNode.getAttribute(\"data-id\"));\r\n        e.target.checked ? e.target.parentNode.parentNode.classList.add(\"completed\"): e.target.parentNode.parentNode.classList = \"\";\r\n        numeroTareas(lista.listaTareas);\r\n        ocultarBorrarCompletadas();\r\n    }\r\n    if (e.target.localName === \"button\"){\r\n        lista.eliminarTarea(e.target.parentNode.parentNode.getAttribute(\"data-id\"));\r\n        e.target.parentNode.parentNode.remove();\r\n        numeroTareas(lista.listaTareas);\r\n        lista.listaTareas.length === 0 ? footer.setAttribute(\"hidden\", true): footer.removeAttribute(\"hidden\");\r\n        ocultarBorrarCompletadas();\r\n    }\r\n});\r\n\r\nfooter.addEventListener(\"click\", (e)=>{\r\n    if(e.target.getAttribute(\"href\") === \"#/\"){\r\n        let lis = todoList.querySelectorAll(\"li\");\r\n        lis.forEach(element =>{\r\n          if (element.hasAttribute(\"hidden\")){\r\n              element.removeAttribute(\"hidden\");\r\n          }\r\n        });\r\n    } else if (e.target.getAttribute(\"href\") === \"#/active\"){\r\n        ocultarTarea(true);\r\n    } else if (e.target.getAttribute(\"href\") === \"#/completed\"){\r\n        ocultarTarea(false);\r\n    }else if (e.target.localName === \"button\"){\r\n        lista.eliminarCompletados();\r\n        lista.listaTareas.length === 0 ? footer.setAttribute(\"hidden\", true): footer.removeAttribute(\"hidden\");\r\n    }\r\n})","import { todoList } from \"../js/components\";\r\nimport { lista } from \"../index\";\r\nimport { numeroTareas } from \"../js/components\";\r\n\r\nexport class ListaTareas{\r\n    constructor(){\r\n        this.cargarLocalStorage();\r\n    }\r\n    addTarea(_tarea){\r\n        this.listaTareas.push(_tarea);\r\n        this.guardarLocalStorage();\r\n    }\r\n    marcarCompletado(_id){\r\n        for(const tarea of this.listaTareas){\r\n            if(tarea.id==_id){\r\n                tarea.completada = !tarea.completada;\r\n                break;\r\n            }\r\n        }\r\n        this.guardarLocalStorage();\r\n    }\r\n    eliminarTarea(_id){\r\n        for(const tarea of this.listaTareas){\r\n            if(tarea.id==_id){\r\n                this.listaTareas.splice(this.listaTareas.indexOf(tarea), 1);\r\n                break;\r\n            }\r\n        }\r\n        this.guardarLocalStorage();\r\n    }\r\n    eliminarCompletados(){\r\n        let lis = todoList.querySelectorAll(\"li\");\r\n        lis.forEach(elem =>{\r\n            lista.listaTareas.forEach(el =>{\r\n               if (elem.getAttribute(\"data-id\") == el.id){\r\n                   if(el.completada){\r\n                    lista.eliminarTarea(el.id);\r\n                    elem.remove();\r\n                    numeroTareas(lista.listaTareas);\r\n                   }\r\n               }\r\n            });\r\n        });\r\n        this.guardarLocalStorage();\r\n    }\r\n    guardarLocalStorage(){\r\n        localStorage.setItem(\"tareas\", JSON.stringify(this.listaTareas));\r\n    }\r\n    cargarLocalStorage(){\r\n        this.listaTareas = (localStorage.getItem(\"tareas\")) ? (JSON.parse(localStorage.getItem(\"tareas\"))) : ([]);\r\n    }\r\n}","//Importar el CSS\r\nimport \"./css/style.css\"\r\n\r\n//Importar la clase que necesitamos\r\nimport { ListaTareas } from \"./classes/listaTareas.class\"\r\n\r\n//Importar funciones y variables que necesitamos para que funcione la aplicación\r\nimport { addTareaHTML, numeroTareas, ocultarBorrarCompletadas, footer } from \"./js/components\";\r\n\r\n//Llamadas\r\nexport const lista = new ListaTareas();\r\nlista.listaTareas.forEach(tarea => addTareaHTML(tarea));\r\nnumeroTareas(lista.listaTareas);\r\nlista.listaTareas.length === 0 ? footer.setAttribute(\"hidden\", true): footer.removeAttribute(\"hidden\");\r\nocultarBorrarCompletadas();"],"sourceRoot":""}